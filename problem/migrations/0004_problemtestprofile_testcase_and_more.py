# Generated by Django 4.0.3 on 2022-05-01 07:39

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import helpers.fileupload
import helpers.problem_data
import problem.models.problem_test_data


class Migration(migrations.Migration):

    dependencies = [
        ('problem', '0003_rename_allowed_language_problem_allowed_languages_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProblemTestProfile',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='test_profile', serialize=False, to='problem.problem', to_field='shortname')),
                ('zipfile', models.FileField(blank=True, null=True, storage=helpers.problem_data.ProblemDataStorage(), upload_to=helpers.fileupload.PathAndRename('problems/test_data', True))),
                ('generator', models.FileField(blank=True, null=True, storage=helpers.problem_data.ProblemDataStorage(), upload_to=problem.models.problem_test_data.problem_directory_file, verbose_name='generator file')),
                ('output_prefix', models.IntegerField(blank=True, null=True, verbose_name='output prefix length')),
                ('output_limit', models.IntegerField(blank=True, null=True, verbose_name='output limit length')),
                ('feedback', models.TextField(blank=True, verbose_name='init.yml generation feedback')),
                ('checker', models.CharField(blank=True, choices=[('standard', 'Standard'), ('floats', 'Floats'), ('floatsabs', 'Floats (absolute)'), ('floatsrel', 'Floats (relative)'), ('rstripped', 'Non-trailing spaces'), ('sorted', 'Unordered'), ('identical', 'Byte identical'), ('linecount', 'Line-by-line')], max_length=10, verbose_name='checker')),
                ('checker_args', models.TextField(blank=True, help_text='checker arguments as a JSON object', verbose_name='checker arguments')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='case position')),
                ('type', models.CharField(choices=[('C', 'Normal case'), ('S', 'Batch start'), ('E', 'Batch end')], default='C', max_length=1, verbose_name='case type')),
                ('input_file', models.CharField(blank=True, max_length=100, verbose_name='input file name')),
                ('output_file', models.CharField(blank=True, max_length=100, verbose_name='output file name')),
                ('generator_args', models.TextField(blank=True, verbose_name='generator arguments')),
                ('points', models.IntegerField(blank=True, null=True, verbose_name='point value')),
                ('is_pretest', models.BooleanField(verbose_name='case is pretest?')),
                ('output_prefix', models.IntegerField(blank=True, null=True, verbose_name='output prefix length')),
                ('output_limit', models.IntegerField(blank=True, null=True, verbose_name='output limit length')),
                ('checker', models.CharField(blank=True, choices=[('standard', 'Standard'), ('floats', 'Floats'), ('floatsabs', 'Floats (absolute)'), ('floatsrel', 'Floats (relative)'), ('rstripped', 'Non-trailing spaces'), ('sorted', 'Unordered'), ('identical', 'Byte identical'), ('linecount', 'Line-by-line')], max_length=10, verbose_name='checker')),
                ('checker_args', models.TextField(blank=True, help_text='checker arguments as a JSON object', verbose_name='checker arguments')),
                ('test_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='problem.problemtestprofile')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='languagelimit',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='languagelimit',
            name='language',
        ),
        migrations.RemoveField(
            model_name='languagelimit',
            name='problem',
        ),
        migrations.RemoveField(
            model_name='problemtestcase',
            name='test_profile',
        ),
        migrations.RemoveField(
            model_name='problemtestdataprofile',
            name='problem',
        ),
        migrations.RemoveField(
            model_name='problemtestdataprofile',
            name='uploader',
        ),
        migrations.DeleteModel(
            name='Language',
        ),
        migrations.DeleteModel(
            name='LanguageLimit',
        ),
        migrations.DeleteModel(
            name='ProblemTestCase',
        ),
        migrations.DeleteModel(
            name='ProblemTestDataProfile',
        ),
    ]
